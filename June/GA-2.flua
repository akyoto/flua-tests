<module>
	<header>
		<title/>
		<dependencies>
			<import>flua.Core</import>
			<import>playground.Everything</import>
		</dependencies>
		<strings>
			<string id="flua_string_0">This\Sis\Sthe\Sstring\Sthat\Swill\Sbe\Sevolved.\SLet's\Smake\Sit\Slonger\Sand\Slonger\Sand\Slonger\Sstill..</string>
			<string id="flua_string_1">String\Sevolver</string>
			<string id="flua_string_2">\n\n</string>
			<string id="flua_string_3">done\Sin\S</string>
			<string id="flua_string_4">\Sgenerations.\S\nYay\SDarwin!</string>
		</strings>
	</header>
	<code>
		<assign depth="0" id="1">
			<value>TARGETSTRING</value>
			<value>flua_string_0</value>
		</assign>
		<const depth="0" id="2">
			<assign depth="1" id="3">
				<value>POPSIZE</value>
				<value>10</value>
			</assign>
			<assign depth="1" id="4">
				<value>MUTATIONRATE</value>
				<value>3</value>
			</assign>
		</const>
		<assign depth="0" id="5">
			<value>population</value>
			<value>
				<new>
					<type>
						<template-call>
							<value>Array</value>
							<value>
								<template-call>
									<value>Vector</value>
									<value>Byte</value>
								</template-call>
							</value>
						</template-call>
					</type>
					<parameters>
						<parameter>POPSIZE</parameter>
					</parameters>
				</new>
			</value>
		</assign>
		<assign depth="0" id="6">
			<value>
				<declare-type>
					<value>bestScore</value>
					<value>Int</value>
				</declare-type>
			</value>
			<value>1</value>
		</assign>
		<declare-type depth="0" id="7">
			<value>bestInd</value>
			<value>Int</value>
		</declare-type>
		<assign depth="0" id="8">
			<value>
				<declare-type>
					<value>generation</value>
					<value>Int</value>
				</declare-type>
			</value>
			<value>0</value>
		</assign>
		<comment>\SStart</comment>
		<call depth="0" id="9">
			<function>createPOP</function>
			<parameters/>
		</call>
		<call depth="0" id="10">
			<function>setRandSeed</function>
			<parameters>
				<parameter>
					<call>
						<function>systemTime</function>
						<parameters/>
					</call>
				</parameter>
			</parameters>
		</call>
		<in depth="0" id="11">
			<expression>
				<new>
					<type>Benchmark</type>
					<parameters>
						<parameter>flua_string_1</parameter>
					</parameters>
				</new>
			</expression>
			<code>
				<call depth="1" id="12">
					<function>gaMain</function>
					<parameters/>
				</call>
			</code>
		</in>
		<call depth="0" id="13">
			<function>print</function>
			<parameters>
				<parameter>flua_string_2</parameter>
			</parameters>
		</call>
		<call depth="0" id="14">
			<function>printIndiv</function>
			<parameters>
				<parameter>
					<index>
						<value>population</value>
						<value>0</value>
					</index>
				</parameter>
			</parameters>
		</call>
		<call depth="0" id="15">
			<function>print</function>
			<parameters>
				<parameter>
					<add>
						<value>
							<add>
								<value>flua_string_3</value>
								<value>generation</value>
							</add>
						</value>
						<value>flua_string_4</value>
					</add>
				</parameter>
			</parameters>
		</call>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="16">
			<name>createPOP</name>
			<code>
				<for depth="1" id="17">
					<iterator>i</iterator>
					<from>0</from>
					<until>POPSIZE</until>
					<code>
						<comment>population[i]\S=\SVector&lt;Byte&gt;()</comment>
						<assign depth="2" id="18">
							<value>
								<index>
									<value>population</value>
									<value>i</value>
								</index>
							</value>
							<value>
								<new>
									<type>
										<template-call>
											<value>Vector</value>
											<value>Byte</value>
										</template-call>
									</type>
									<parameters>
										<parameter>
											<access>
												<value>TARGETSTRING</value>
												<value>lengthInBytes</value>
											</access>
										</parameter>
									</parameters>
								</new>
							</value>
						</assign>
						<comment>=\S0\Suntil\STARGETSTRING.length</comment>
						<foreach depth="2" id="19">
							<iterator>j</iterator>
							<collection>TARGETSTRING</collection>
							<code>
								<call depth="3" id="20">
									<function>
										<access>
											<value>
												<index>
													<value>population</value>
													<value>i</value>
												</index>
											</value>
											<value>add</value>
										</access>
									</function>
									<parameters>
										<parameter>
											<call>
												<function>rand</function>
												<parameters>
													<parameter>32</parameter>
													<parameter>125</parameter>
												</parameters>
											</call>
										</parameter>
									</parameters>
								</call>
							</code>
						</foreach>
					</code>
				</for>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="21">
			<name>findBest</name>
			<code>
				<assign depth="1" id="22">
					<value>
						<declare-type>
							<value>best</value>
							<value>Int</value>
						</declare-type>
					</value>
					<value>0</value>
				</assign>
				<assign depth="1" id="23">
					<value>
						<declare-type>
							<value>bscore</value>
							<value>Int</value>
						</declare-type>
					</value>
					<value>999999</value>
				</assign>
				<assign depth="1" id="24">
					<value>
						<declare-type>
							<value>score</value>
							<value>Int</value>
						</declare-type>
					</value>
					<value>0</value>
				</assign>
				<foreach depth="1" id="25">
					<counter>pidx</counter>
					<iterator>x</iterator>
					<collection>population</collection>
					<code>
						<assign depth="2" id="26">
							<value>score</value>
							<value>
								<call>
									<function>getScore</function>
									<parameters>
										<parameter>x</parameter>
									</parameters>
								</call>
							</value>
						</assign>
						<if-block depth="2" id="27">
							<if>
								<condition>
									<less>
										<value>score</value>
										<value>bscore</value>
									</less>
								</condition>
								<code>
									<assign depth="3" id="28">
										<value>bscore</value>
										<value>score</value>
									</assign>
									<assign depth="3" id="29">
										<value>best</value>
										<value>pidx</value>
									</assign>
								</code>
							</if>
						</if-block>
					</code>
				</foreach>
				<assign depth="1" id="30">
					<value>bestInd</value>
					<value>best</value>
				</assign>
				<return depth="1" id="31">best</return>
			</code>
			<meta/>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="32">
			<parameters>
				<parameter>
					<declare-type>
						<value>a</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>Byte</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>getScore</name>
			<code>
				<assign depth="1" id="33">
					<value>
						<declare-type>
							<value>score</value>
							<value>Int</value>
						</declare-type>
					</value>
					<value>0</value>
				</assign>
				<foreach depth="1" id="34">
					<counter>xpos</counter>
					<iterator>x</iterator>
					<collection>
						<access>
							<value>TARGETSTRING</value>
							<value>bytes</value>
						</access>
					</collection>
					<code>
						<assign-add depth="2" id="35">
							<value>score</value>
							<value>
								<call>
									<function>abs</function>
									<parameters>
										<parameter>
											<subtract>
												<value>x</value>
												<value>
													<index>
														<value>a</value>
														<value>xpos</value>
													</index>
												</value>
											</subtract>
										</parameter>
									</parameters>
								</call>
							</value>
						</assign-add>
					</code>
				</foreach>
				<assign depth="1" id="36">
					<value>bestScore</value>
					<value>score</value>
				</assign>
				<return depth="1" id="37">score</return>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="38">
			<parameters>
				<parameter>
					<declare-type>
						<value>best</value>
						<value>Int</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>mutatePOP</name>
			<code>
				<comment>Vector&lt;Byte&gt;()</comment>
				<assign depth="1" id="39">
					<value>b</value>
					<value>
						<new>
							<type>
								<template-call>
									<value>Vector</value>
									<value>Byte</value>
								</template-call>
							</type>
							<parameters>
								<parameter>
									<access>
										<value>TARGETSTRING</value>
										<value>lengthInBytes</value>
									</access>
								</parameter>
							</parameters>
						</new>
					</value>
				</assign>
				<comment>b=\S\SVector&lt;Byte&gt;()</comment>
				<comment>clone\Spopulation[best],b</comment>
				<foreach depth="1" id="40">
					<iterator>x</iterator>
					<collection>
						<index>
							<value>population</value>
							<value>best</value>
						</index>
					</collection>
					<code>
						<call depth="2" id="41">
							<function>
								<access>
									<value>b</value>
									<value>add</value>
								</access>
							</function>
							<parameters>
								<parameter>x</parameter>
							</parameters>
						</call>
					</code>
				</foreach>
				<comment>elitism</comment>
				<call depth="1" id="42">
					<function>clone</function>
					<parameters>
						<parameter>b</parameter>
						<parameter>
							<index>
								<value>population</value>
								<value>0</value>
							</index>
						</parameter>
					</parameters>
				</call>
				<for depth="1" id="43">
					<iterator>i</iterator>
					<from>1</from>
					<until>POPSIZE</until>
					<code>
						<call depth="2" id="44">
							<function>clone</function>
							<parameters>
								<parameter>b</parameter>
								<parameter>
									<index>
										<value>population</value>
										<value>i</value>
									</index>
								</parameter>
							</parameters>
						</call>
						<call depth="2" id="45">
							<function>mutate</function>
							<parameters>
								<parameter>
									<index>
										<value>population</value>
										<value>i</value>
									</index>
								</parameter>
							</parameters>
						</call>
					</code>
				</for>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="46">
			<parameters>
				<parameter>
					<declare-type>
						<value>source</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>Byte</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
				<parameter>
					<declare-type>
						<value>dest</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>Byte</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>clone</name>
			<code>
				<foreach depth="1" id="47">
					<counter>xpos</counter>
					<iterator>x</iterator>
					<collection>source</collection>
					<code>
						<assign depth="2" id="48">
							<value>
								<index>
									<value>dest</value>
									<value>xpos</value>
								</index>
							</value>
							<value>x</value>
						</assign>
						<comment>print\Sdest[xpos]</comment>
						<comment>print\Sx</comment>
						<comment>print\S&quot;\S&quot;</comment>
					</code>
				</foreach>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="49">
			<parameters>
				<parameter>
					<declare-type>
						<value>indiv</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>Byte</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>mutate</name>
			<code>
				<foreach depth="1" id="50">
					<counter>xpos</counter>
					<iterator>x</iterator>
					<collection>indiv</collection>
					<code>
						<if-block depth="2" id="51">
							<if>
								<condition>
									<less-or-equal>
										<value>
											<call>
												<function>rand</function>
												<parameters>
													<parameter>1</parameter>
													<parameter>100</parameter>
												</parameters>
											</call>
										</value>
										<value>MUTATIONRATE</value>
									</less-or-equal>
								</condition>
								<code>
									<if-block depth="3" id="52">
										<if>
											<condition>
												<equal>
													<value>
														<call>
															<function>rand</function>
															<parameters>
																<parameter>1</parameter>
																<parameter>3</parameter>
															</parameters>
														</call>
													</value>
													<value>1</value>
												</equal>
											</condition>
											<code>
												<assign depth="4" id="53">
													<value>
														<index>
															<value>indiv</value>
															<value>xpos</value>
														</index>
													</value>
													<value>
														<call>
															<function>rand</function>
															<parameters>
																<parameter>32</parameter>
																<parameter>125</parameter>
															</parameters>
														</call>
													</value>
												</assign>
											</code>
										</if>
										<else depth="3" id="54">
											<code>
												<comment>\Sthis\Scan\Sdrift\Soutside\Srange\Sbut\Swhatever..</comment>
												<assign depth="4" id="55">
													<value>
														<index>
															<value>indiv</value>
															<value>xpos</value>
														</index>
													</value>
													<value>
														<add>
															<value>
																<index>
																	<value>indiv</value>
																	<value>xpos</value>
																</index>
															</value>
															<value>
																<call>
																	<function>rand</function>
																	<parameters>
																		<parameter>
																			<negative>
																				<value>2</value>
																			</negative>
																		</parameter>
																		<parameter>2</parameter>
																	</parameters>
																</call>
															</value>
														</add>
													</value>
												</assign>
											</code>
										</else>
									</if-block>
								</code>
							</if>
						</if-block>
					</code>
				</foreach>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="56">
			<parameters>
				<parameter>
					<declare-type>
						<value>indiv</value>
						<value>
							<template-call>
								<value>Vector</value>
								<value>Byte</value>
							</template-call>
						</value>
					</declare-type>
				</parameter>
			</parameters>
			<name>printIndiv</name>
			<code>
				<call depth="1" id="57">
					<function>print</function>
					<parameters>
						<parameter>
							<new>
								<type>String</type>
								<parameters>
									<parameter>
										<access>
											<value>indiv</value>
											<value>data</value>
										</access>
									</parameter>
								</parameters>
							</new>
						</parameter>
					</parameters>
				</call>
			</code>
		</function>
		<comment>---------------------------------------------------------------------------------------------------</comment>
		<function depth="0" id="58">
			<name>gaMain</name>
			<code>
				<while depth="1" id="59">
					<condition>
						<greater>
							<value>bestScore</value>
							<value>0</value>
						</greater>
					</condition>
					<code>
						<call depth="2" id="60">
							<function>mutatePOP</function>
							<parameters>
								<parameter>
									<call>
										<function>findBest</function>
										<parameters/>
									</call>
								</parameter>
							</parameters>
						</call>
						<assign-add depth="2" id="61">
							<value>generation</value>
							<value>1</value>
						</assign-add>
						<if-block depth="2" id="62">
							<if>
								<condition>
									<greater>
										<value>generation</value>
										<value>5000</value>
									</greater>
								</condition>
								<code>
									<call depth="3" id="63">
										<function>exit</function>
										<parameters/>
									</call>
								</code>
							</if>
						</if-block>
						<call depth="2" id="64">
							<function>printIndiv</function>
							<parameters>
								<parameter>
									<index>
										<value>population</value>
										<value>bestInd</value>
									</index>
								</parameter>
							</parameters>
						</call>
						<comment>print\S&quot;\TScore\Sis\S$bestScore&quot;</comment>
					</code>
				</while>
			</code>
		</function>
	</code>
</module>
